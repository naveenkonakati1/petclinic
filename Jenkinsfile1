pipeline {
   agent { label 'myagent' }
   environment {
		def tomcatDevIp = '52.15.71.144'
		def tomcatHome = '/home/ec2-user/apache-tomcat-8.5.61'
        	def tomcatStart = "${tomcatHome}/bin/startup.sh"
        	def tomcatStop = "${tomcatHome}/bin/shutdown.sh"
	}
     stages{
		stage('build') {
			steps {
			   	 sh 'mvn clean package'
   			}
	   	}
		stage('archive') {
			steps {
		    		archiveArtifacts artifacts: 'target/*.?ar', followSymlinks: false
		    	}
		}
		stage('unit tests') {
			steps {
		    		junit 'target/surefire-reports/*.xml'
		  	}
		}
		stage('nexus artifact') {
			steps {
		    		nexusArtifactUploader artifacts: [[artifactId: 'spring-petclinic',
				classifier: '',
				file: 'target/petclinic.war',
				type: 'war']],
				credentialsId: 'nexus', 
				groupId: 'org.springframework.samples',
				nexusUrl: '192.168.1.7:8081', 
				nexusVersion: 'nexus2',
				protocol: 'http',
				repository: 'snapshots',
				version: '4.2.6-SNAPSHOT'
		   	}    
		}
		
		
		stage('Deploy') {
			steps {
				script {
					//sshagent (credentials: ['tomcat']) {
					//	sh "scp -o StrictHostKeyChecking=no target/petclinic.war ec2-user@${tomcatDevIp}:${tomcatHome}/webapps/petclinic.war"
                			//	sh "ssh sonar@${tomcatDevIp} ${tomcatStop}"
                			//	sh "ssh sonar@${tomcatDevIp} ${tomcatStart}"
					
				sh '''
				cp -r target/petclinic.war ${tomcatHome}/webapps/petclinic.war
				${tomcatStop}
				${tomcatStart}
				'''
            				//}
            			}
			}
		}
	}
	
	post {
		always {
			echo 'welcome to devops'
		}
		success {
			echo 'build is success'
		}
		failure {
			echo 'build is failed'
		}
    }
}

def notify(status){
	emailext (
		body: "${status}-${env.BUILD_URL}", 
		subject: "JOB:${env.JOB_NAME} with build: ${env.BUILD_ID}${status}", 
		to: 'udu6767@gmail.com'
	)
}
