pipeline {
   agent any
     stages{
		stage('build') {
			steps {
			   	 sh 'mvn clean package'
   			}
	   	}
		stage('archive') {
			steps {
		    		archiveArtifacts artifacts: 'target/*.?ar', followSymlinks: false
		    	}
		}
		stage('unit tests') {
			steps {
		    		junit 'target/surefire-reports/*.xml'
		  	}
		}
		stage('nexus artifact') {
			steps {
		    		nexusArtifactUploader artifacts: [[artifactId: 'spring-petclinic',
				classifier: '',
				file: 'target/petclinic.war',
				type: 'war']],
				credentialsId: 'mynexus', 
				groupId: 'org.springframework.samples',
				nexusUrl: '52.14.11.21:8081/nexus', 
				nexusVersion: 'nexus2',
				protocol: 'http',
				repository: 'releases',
				version: '4.2.6-SNAPSHOT'
		   	}    
		}
		stage('Deploy') {
			input {
                		message "Should we continue?"
                		ok "Yes, we should."
            		}
			steps {
				checkout([$class: 'GitSCM', branches: [[name: '*/master']],
				doGenerateSubmoduleConfigurations: false, 
                                extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'ansible']],
				submoduleCfg: [], 
        			userRemoteConfigs: [[url: 'https://github.com/naveenkonukati/tomcat-deploy.git']]])
			sh '''
				cd ansible
				ansible-playbook -i production -e "BUILD_NO=${BUILD_NUMBER}" site.yml
			  '''
			}
			
		}	
			
	}		
	post {
		always {
			echo 'welcome to devops'
		}
		success {
			echo 'build is success'
		}
		failure {
			echo 'build is failed'
		}
	}
}

def notify(status){
	emailext (
		body: "${status}-${env.BUILD_URL}", 
		subject: "JOB:${env.JOB_NAME} with build: ${env.BUILD_ID}${status}", 
		to: 'udu6767@gmail.com'
	)
}
